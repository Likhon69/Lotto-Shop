// <auto-generated />
using System;
using ECommerceDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommerceDbContext.Migrations
{
    [DbContext(typeof(ECommerceDatabaseContext))]
    [Migration("20210304112715_Delete")]
    partial class Delete
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShopModels.Models.Area", b =>
                {
                    b.Property<long>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.HasKey("AreaId");

                    b.HasIndex("CityId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("ShopModels.Models.ArticleDetails", b =>
                {
                    b.Property<long>("ArtD_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleSubtitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BannerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Brand_Id")
                        .HasColumnType("int");

                    b.Property<long>("CategoryC_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(900)")
                        .HasMaxLength(900);

                    b.Property<long>("EnteredBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelivery")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNewAraival")
                        .HasColumnType("bit");

                    b.Property<long>("SubCategoryS_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("SubSubCategoryS_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("SubSubSubCategoryS_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("Vat_Id")
                        .HasColumnType("int");

                    b.HasKey("ArtD_Id");

                    b.ToTable("ArticleDetails");
                });

            modelBuilder.Entity("ShopModels.Models.ArticleImageVarient", b =>
                {
                    b.Property<long>("Img_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ArticleDetailsArtD_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMaster")
                        .HasColumnType("bit");

                    b.HasKey("Img_Id");

                    b.HasIndex("ArticleDetailsArtD_Id");

                    b.ToTable("ArticleImageVarients");
                });

            modelBuilder.Entity("ShopModels.Models.ArticleMatrix", b =>
                {
                    b.Property<long>("ArtM_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtM_Id");

                    b.ToTable("ArticleMatrices");
                });

            modelBuilder.Entity("ShopModels.Models.ArticleVariant", b =>
                {
                    b.Property<long>("ArtV_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ArticleDetailsArtD_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("ArticleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtV_Id");

                    b.HasIndex("ArticleDetailsArtD_Id");

                    b.ToTable("ArticleVariants");
                });

            modelBuilder.Entity("ShopModels.Models.BannerInfo", b =>
                {
                    b.Property<long>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BannerImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BannerId");

                    b.ToTable("BannerInfo");
                });

            modelBuilder.Entity("ShopModels.Models.BasketValueDiscount", b =>
                {
                    b.Property<long>("BasketValueDiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<long>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<int>("BasketValueDiscountPercentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DiscountTimeId")
                        .HasColumnType("bigint");

                    b.Property<long>("EnteredBy")
                        .HasColumnType("bigint");

                    b.Property<long>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.HasKey("BasketValueDiscountId");

                    b.HasIndex("DiscountTimeId");

                    b.ToTable("BasketValueDiscount");
                });

            modelBuilder.Entity("ShopModels.Models.BillingAddress", b =>
                {
                    b.Property<long>("BillingAdd_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeafultAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHome")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOffice")
                        .HasColumnType("bit");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.HasKey("BillingAdd_Id");

                    b.ToTable("BillingAddresses");
                });

            modelBuilder.Entity("ShopModels.Models.Brand", b =>
                {
                    b.Property<long>("Brand_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Brand_Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("ShopModels.Models.Category", b =>
                {
                    b.Property<long>("C_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("C_Id");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("ShopModels.Models.City", b =>
                {
                    b.Property<long>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RegionId")
                        .HasColumnType("bigint");

                    b.HasKey("CityId");

                    b.HasIndex("RegionId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ShopModels.Models.CourierCompanyMaster", b =>
                {
                    b.Property<long>("company_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(600)")
                        .HasMaxLength(600);

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("company_Id");

                    b.ToTable("courierCompanyMasters");
                });

            modelBuilder.Entity("ShopModels.Models.CourierContactPerson", b =>
                {
                    b.Property<long>("person_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CourierCompanyMastercompany_Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("created_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("person_Id");

                    b.HasIndex("CourierCompanyMastercompany_Id");

                    b.ToTable("courierContactPersons");
                });

            modelBuilder.Entity("ShopModels.Models.CustomerInstallationInfo", b =>
                {
                    b.Property<long>("CusPIn_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerMobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InstallationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CusPIn_Id");

                    b.ToTable("CustomerInstallationInfos");
                });

            modelBuilder.Entity("ShopModels.Models.DeliveryInfoDetails", b =>
                {
                    b.Property<long>("Del_InId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeliveryAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("EnteredBy")
                        .HasColumnType("bigint");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Del_InId");

                    b.ToTable("DeliveryInfoDetails");
                });

            modelBuilder.Entity("ShopModels.Models.DiscountDetail", b =>
                {
                    b.Property<long>("DiscountDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("DiscountTimeId")
                        .HasColumnType("bigint");

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiscountDetailId");

                    b.HasIndex("DiscountTimeId");

                    b.ToTable("DiscountDetails");
                });

            modelBuilder.Entity("ShopModels.Models.DiscountTime", b =>
                {
                    b.Property<long>("DiscountTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DiscountFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DiscountTimeTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnteredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiscountTimeId");

                    b.ToTable("DiscountTimes");
                });

            modelBuilder.Entity("ShopModels.Models.DiscountType", b =>
                {
                    b.Property<long>("DiscountTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiscountTypeId");

                    b.ToTable("DiscountTypes");
                });

            modelBuilder.Entity("ShopModels.Models.HaltArticle", b =>
                {
                    b.Property<long>("HArt_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("HArt_Id");

                    b.ToTable("HaltArticles");
                });

            modelBuilder.Entity("ShopModels.Models.OrderDetail", b =>
                {
                    b.Property<Guid>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ArticleId")
                        .HasColumnType("bigint");

                    b.Property<string>("ArticleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<Guid>("OrderHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SalesQty")
                        .HasColumnType("int");

                    b.Property<double>("SalesTotalPrice")
                        .HasColumnType("float");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<double>("VatAmount")
                        .HasColumnType("float");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderHeaderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ShopModels.Models.OrderHeader", b =>
                {
                    b.Property<Guid>("OrderHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Approved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("BillingId")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullySattelled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OrderAmount")
                        .HasColumnType("float");

                    b.Property<string>("PartialApproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PartialApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("RecieveAmount")
                        .HasColumnType("float");

                    b.Property<double>("Sattelled")
                        .HasColumnType("float");

                    b.Property<long>("ShippingId")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("OrderHeaderId");

                    b.ToTable("OrderHeaders");
                });

            modelBuilder.Entity("ShopModels.Models.OtherInformation", b =>
                {
                    b.Property<long>("Oth_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RptCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RptSubCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Oth_Id");

                    b.ToTable("OtherInformations");
                });

            modelBuilder.Entity("ShopModels.Models.Pricing", b =>
                {
                    b.Property<int>("Pricing_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArticleDetails_Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DealerPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FranchisePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InstitutePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchaseCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StandardPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WholeSalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Pricing_Id");

                    b.ToTable("Pricings");
                });

            modelBuilder.Entity("ShopModels.Models.Region", b =>
                {
                    b.Property<long>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegionId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("ShopModels.Models.ShippingAddress", b =>
                {
                    b.Property<long>("ShippingAdd_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeafultAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHome")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOffice")
                        .HasColumnType("bit");

                    b.Property<long>("RegionId")
                        .HasColumnType("bigint");

                    b.HasKey("ShippingAdd_Id");

                    b.ToTable("ShippingAddresses");
                });

            modelBuilder.Entity("ShopModels.Models.SoldArticle", b =>
                {
                    b.Property<long>("SArt_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArticleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArticleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("SArt_Id");

                    b.ToTable("SoldArticles");
                });

            modelBuilder.Entity("ShopModels.Models.SubCategory", b =>
                {
                    b.Property<long>("S_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Brand_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("CategoryC_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCatImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("S_Id");

                    b.HasIndex("Brand_Id");

                    b.HasIndex("CategoryC_Id");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("ShopModels.Models.Sub_SubCategory", b =>
                {
                    b.Property<long>("Sub_S_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Brand_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SubCategoryS_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("SubSubCatImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("Sub_S_Id");

                    b.HasIndex("Brand_Id");

                    b.HasIndex("SubCategoryS_Id");

                    b.ToTable("Sub_SubCategories");
                });

            modelBuilder.Entity("ShopModels.Models.Sub_Sub_SubCategory", b =>
                {
                    b.Property<long>("SubSub_S_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Brand_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubSubSubCatImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Sub_SubCategorySub_S_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("SubSub_S_Id");

                    b.HasIndex("Brand_Id");

                    b.HasIndex("Sub_SubCategorySub_S_Id");

                    b.ToTable("Sub_Sub_SubCategories");
                });

            modelBuilder.Entity("ShopModels.Models.User", b =>
                {
                    b.Property<long>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShopModels.Models.Vat", b =>
                {
                    b.Property<int>("Vat_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VatTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Vat_Rat")
                        .HasColumnType("float");

                    b.HasKey("Vat_Id");

                    b.ToTable("Vats");
                });

            modelBuilder.Entity("ShopModels.OrderModels.Customer", b =>
                {
                    b.Property<long>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ShopModels.OrderModels.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemID");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("ShopModels.OrderModels.Order", b =>
                {
                    b.Property<long>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<long?>("CustomerID1")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("GTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PMethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID1");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ShopModels.OrderModels.OrderItem", b =>
                {
                    b.Property<long>("OrderItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemID")
                        .HasColumnType("int");

                    b.Property<long?>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemID");

                    b.HasIndex("ItemID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("ShopModels.Models.Area", b =>
                {
                    b.HasOne("ShopModels.Models.City", "City")
                        .WithMany("Area")
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("ShopModels.Models.ArticleImageVarient", b =>
                {
                    b.HasOne("ShopModels.Models.ArticleDetails", "ArticleDetails")
                        .WithMany("ArticleImageVarients")
                        .HasForeignKey("ArticleDetailsArtD_Id");
                });

            modelBuilder.Entity("ShopModels.Models.ArticleVariant", b =>
                {
                    b.HasOne("ShopModels.Models.ArticleDetails", "ArticleDetails")
                        .WithMany("ArticleVariants")
                        .HasForeignKey("ArticleDetailsArtD_Id");
                });

            modelBuilder.Entity("ShopModels.Models.BasketValueDiscount", b =>
                {
                    b.HasOne("ShopModels.Models.DiscountTime", "DiscountTime")
                        .WithMany("BasketValueDiscounts")
                        .HasForeignKey("DiscountTimeId");
                });

            modelBuilder.Entity("ShopModels.Models.City", b =>
                {
                    b.HasOne("ShopModels.Models.Region", "Region")
                        .WithMany("City")
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("ShopModels.Models.CourierContactPerson", b =>
                {
                    b.HasOne("ShopModels.Models.CourierCompanyMaster", null)
                        .WithMany("CourierContactPersons")
                        .HasForeignKey("CourierCompanyMastercompany_Id");
                });

            modelBuilder.Entity("ShopModels.Models.DiscountDetail", b =>
                {
                    b.HasOne("ShopModels.Models.DiscountTime", "DiscountTime")
                        .WithMany("DiscountDetails")
                        .HasForeignKey("DiscountTimeId");
                });

            modelBuilder.Entity("ShopModels.Models.OrderDetail", b =>
                {
                    b.HasOne("ShopModels.Models.OrderHeader", "OrderHeader")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopModels.Models.SubCategory", b =>
                {
                    b.HasOne("ShopModels.Models.Brand", "Brand")
                        .WithMany("SubCategories")
                        .HasForeignKey("Brand_Id");

                    b.HasOne("ShopModels.Models.Category", "Category")
                        .WithMany("subCategories")
                        .HasForeignKey("CategoryC_Id");
                });

            modelBuilder.Entity("ShopModels.Models.Sub_SubCategory", b =>
                {
                    b.HasOne("ShopModels.Models.Brand", "Brand")
                        .WithMany("Sub_SubCategories")
                        .HasForeignKey("Brand_Id");

                    b.HasOne("ShopModels.Models.SubCategory", "SubCategory")
                        .WithMany("Sub_SubCategories")
                        .HasForeignKey("SubCategoryS_Id");
                });

            modelBuilder.Entity("ShopModels.Models.Sub_Sub_SubCategory", b =>
                {
                    b.HasOne("ShopModels.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("Brand_Id");

                    b.HasOne("ShopModels.Models.Sub_SubCategory", "Sub_SubCategory")
                        .WithMany("Sub_Sub_SubCategories")
                        .HasForeignKey("Sub_SubCategorySub_S_Id");
                });

            modelBuilder.Entity("ShopModels.OrderModels.Order", b =>
                {
                    b.HasOne("ShopModels.OrderModels.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID1");
                });

            modelBuilder.Entity("ShopModels.OrderModels.OrderItem", b =>
                {
                    b.HasOne("ShopModels.OrderModels.Item", "Item")
                        .WithMany("OrderItems")
                        .HasForeignKey("ItemID");

                    b.HasOne("ShopModels.OrderModels.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID");
                });
#pragma warning restore 612, 618
        }
    }
}
